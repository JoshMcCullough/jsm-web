@{
    ViewBag.Title = "overview";
}

<section>
    @{Html.RenderPartial("_Content");}

    <div class="subsection">
        <h2><span>projects</span></h2>
        <p>Please find below a small collection of my work. I've highlighted my involvement on each project.</p>
        <ul class="blocks">
            <li>
                <h3>Health Indicators Warehouse <text class="">(HIW)</text><a class="visit" href="http://healthindicators.gov" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">Data Warehouse of health-related indicators - CDC/NCHS.</div>
                <div class="content">
                    <p>The HIW contains data from 125+ sources across 1,200+ health indicators. This project is part of the <a href="http://www.data.gov" target="_blank">Data.gov</a>'s <a href="http://www.whitehouse.gov/open" target="_blank">Open Data Initiative</a> and exposes massive amounts of publicly-consumable health-related data.</p>
                </div>
                <ul class="features tech-items">
                    <li class="cs"></li>
                    <li class="mssql"></li>
                    <li class="html"></li>
                    <li class="css"></li>
                    <li class="js"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>HIW Developers &amp; Services<a class="visit" href="http://developers.healthindicators.gov" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">Over 1,000 RESTful (and SOAP) service methods.</div>
                <div class="content">
                    <p>Exposes data from the HIW. Custom CodeGenerator templates were used to generate the service methods and documentation. The system includes a real-time URL builder/service tester and API key registration/verification.</p>
                </div>
                <ul class="features tech-items">
                    <li class="cs"></li>
                    <li class="mssql"></li>
                    <li class="html5"></li>
                    <li class="css3"></li>
                    <li class="bs"></li>
                    <li class="js"></li>
                    <li class="ko"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>CodeGenerator<a class="visit" href="http://quantumconceptscorp.com/Products/CodeGenerator.aspx" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">Develop stable, robust and highly versatile software, faster!</div>
                <div class="content">
                    <p>This tool allows you and your team to get the nuts and bolts of any project up and running amazingly fast. The backbone of CodeGenerator relies on technologies that your team probably already knows - XML and XSLT. You design an XSL Template once and CodeGenerator handles the rest.</p>
                </div>
                <ul class="features tech-items">
                    <li class="cs"></li>
                    <li class="winforms"></li>
                    <li class="mssql"></li>
                    <li class="mysql"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>Platform Liberty</h3>
                <div class="tagline">Empowering candidates in the fight for liberty.</div>
                <div class="content">
                    <p>The goal of this project is to provide an inexpensive, easy-to-use web application for liberty candidates. This platform will be available to any candidate who is on the side of liberty - regardless of party their party affiliation. 10+ instances.</p>
                </div>
                <ul class="features tech-items">
                    <li class="rails"></li>
                    <li class="mysql"></li>
                    <li class="html5"></li>
                    <li class="css3"></li>
                    <li class="bs"></li>
                    <li class="js"></li>
                    <li class="ko"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>Carson for Congress<a class="visit" href="http://jeffreycarson.platformliberty.org" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">Restoring Sanity</div>
                <div class="content">
                    <p>Built atop Platform Liberty and customized to fit the needs of Jeffrey Carson's 2014 Congressional campaign.</p>
                </div>
                <ul class="features tech-items">
                    <li class="rails"></li>
                    <li class="mysql"></li>
                    <li class="html5"></li>
                    <li class="css3"></li>
                    <li class="bs"></li>
                    <li class="js"></li>
                    <li class="ko"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>AeroBazaar<a class="visit" href="http://aerobazaar.com" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">The most beautiful place to buy and sell aircraft online.</div>
                <div class="content">
                    <p>A robust aircraft listing engine allows potential aircraft buyers to easily find what they're looking for. Sellers can manage their inventory and add detailed information for each of their aircraft.</p>
                </div>
                <ul class="features tech-items">
                    <li class="php"></li>
                    <li class="mysql"></li>
                    <li class="html5"></li>
                    <li class="css3"></li>
                    <li class="bs"></li>
                    <li class="js"></li>
                    <li class="ko"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>

            <li>
                <h3>7Flix<a class="visit" href="http://quantumconceptscorp.com/Products/7Flix.aspx" target="_blank"><span class="glyphicon glyphicon-new-window"></span></a></h3>
                <div class="tagline">A full-featured Netflix client for Windows Phones.</div>
                <div class="content">
                    <p>Although this app is no longer available, since Netflix ditched their public API, it was the most complete Netflix client on the platform at the time. It included queue management features and the ability to search and browse the entire Netflix library.</p>
                </div>
                <ul class="features tech-items">
                    <li class="cs"></li>
                    <li class="wp"></li>
                    <li class="api"></li>
                    <li class="sl"></li>
                    <li class="ui-ux"></li>
                </ul>
            </li>
        </ul>
    </div>

    <div class="subsection">
        <h2><span>self-rankings</span></h2>
        <p>I've compiled a list of the technologies I work with most often. The relative size of each item indicates my level of expertise.</p>
        <ul class="blocks expertise tech-items">
            <li class="cs" data-expertise="10"></li>
            <li class="mvc" data-expertise="10"></li>
            <li class="webforms" data-expertise="10"></li>
            <li class="mssql" data-expertise="9"></li>
            <li class="mysql" data-expertise="7"></li>
            <li class="rails" data-expertise="6"></li>
            <li class="php" data-expertise="5"></li>
            <li class="wp" data-expertise="4"></li>
            <li class="winforms" data-expertise="10"></li>
            <li class="html" data-expertise="10"></li>
            <li class="css" data-expertise="10"></li>
            <li class="bs" data-expertise="8"></li>
            <li class="js" data-expertise="10"></li>
            <li class="ko" data-expertise="7"></li>
            <li class="sl" data-expertise="4"></li>
            @*@<li class="regex" data-expertise="9"></li>
            <li class="xml" data-expertise="10"></li>
            <li class="xslt" data-expertise="9"></li>
            <li class="xsd" data-expertise="7"></li>
            <li class="oracle" data-expertise="5"></li>
            <li class="iis" data-expertise="10"></li>
            <li class="linux" data-expertise="6"></li>
            <li class="windows" data-expertise="10" title="Includes both desktop and server varieties."></li>
            <li class="aws" data-expertise="7"></li>
            <li class="java" data-expertise="7"></li>
            <li class="openscad" data-expertise="3"></li>
            <li class="git" data-expertise="7"></li>
            <li class="svn" data-expertise="9"></li>
            <li class="tfvc" data-expertise="7"></li>
            <li class="arcgis" data-expertise="3"></li>
            <li class="mapping" data-expertise="6"></li>
            <li class="flash" data-expertise="3"></li>
            <li class="svg" data-expertise="7"></li>
            <li class="python" data-expertise="2"></li>
            <li class="grails" data-expertise="3"></li>
            <li class="vb" data-expertise="8"></li>
            <li class="arduino" data-expertise="4"></li>
            <li class="c++" data-expertise="3"></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>
            <li class="" data-expertise=""></li>*@
        </ul>
    </div>
</section>

@section Scripts {
    <script type="text/javascript">
        var minSize = 30;
        var maxSize = 100;
        var padding = 4;
        var sizeRange = (maxSize - minSize);
        var movers = [
            function ($tag, collidedTags) { $tag.css("top", getExtreme(collidedTags, Math.min, "top") - $tag.bounds.height - padding); },   //Up
            function ($tag, collidedTags) { $tag.css("left", getExtreme(collidedTags, Math.max, "right") + padding); },                     //Right
            function ($tag, collidedTags) { $tag.css("top", getExtreme(collidedTags, Math.max, "bottom") + padding); },                     //Down
            function ($tag, collidedTags) { $tag.css("left", getExtreme(collidedTags, Math.min, "left") - $tag.bounds.width - padding); }   //Left
        ];
        var centerX, centerY;

        function layoutTags($container) {
            var $tags = $container.find("li");

            initTags($container, $tags);
            sortTags($container, $tags);
            sizeTags($container, $tags);
            positionTags($container, $tags);
        }

        function initTags($container, $tags) {
            centerX = ($container.width() / 2);
            centerY = ($container.height() / 2);
            $tags.each(function () { this.expertise = Number(this.getAttribute("data-expertise")); })
        }

        function sortTags($container, $tags) {
            $tags.sort(function (a, b) {
                var aValue = a.expertise;
                var bValue = b.expertise;

                if (aValue > bValue)
                    return -1;
                else if (bValue > aValue)
                    return 1;

                return 0;
            });
        }

        function sizeTags($container, $tags) {
            var values = $tags.map(function () { return this.expertise; });
            var min = Math.min.apply(Math, values);
            var max = Math.max.apply(Math, values);
            var range = (max - min);

            $tags.each(function () {
                var $tag = $(this);
                var value = $tag[0].expertise;
                var relativeValue = ((value - min) / range);
                var size = (minSize + (relativeValue * sizeRange));

                $tag.width(size);
                $tag.height(size);
                $tag.css("line-height", size + "px");
            })
        }

        function positionTags($container, $tags) {
            var unplacedTags = $.makeArray($tags.map(function () { return $(this); }));
            var placedTags = new Array();
            
            //Place tags in a loop, randomly grabbing each tag (except for the first iteration, start with the "largest" tag).
            while (unplacedTags.length > 0 && !stopTags) {
                var tagIndex = (placedTags.length == 0 ? 0 : Math.floor(Math.random() * unplacedTags.length));
                var $tag = unplacedTags.splice(tagIndex, 1)[0];

                //Place the tag.
                placeTag(placedTags, $tag);

                //"Mark" the tag as placed.
                placedTags.push($tag);
            }

            //Shift all tags so there are no negative coordinates.
            shiftTags(placedTags);
            sizeContainer($container, placedTags);
        }

        function placeTag(placedTags, $tag) {
            var collidedTags = null;
            var moverIndex = 0;

            //Start at the center.
            $tag.bounds = new Bounds($tag);
            $tag.css("left", (centerX - $tag.bounds.halfWidth));
            $tag.css("top", (centerY - $tag.bounds.halfHeight));
            
            do {
                //Always clear the collided tag and recalculate the bounds.
                collidedTags = new Array();
                $tag.bounds = new Bounds($tag);

                //Find the first collided tag (if any).
                for (var i = 0; i < placedTags.length; i++)
                    if (placedTags[i].bounds.collidesWith($tag.bounds))
                        collidedTags.push(placedTags[i]);

                //If there's a collision, move the tag based on an Archimedean Spiral.
                if (collidedTags.length > 0) {
                    movers[moverIndex]($tag, collidedTags);

                    if (moverIndex == (movers.length - 1))
                        return;
                    else
                        moverIndex = (moverIndex == (movers.length - 1) ? 0 : moverIndex + 1);
                }
            } while (collidedTags.length > 0 && !stopTags);
        }
        var stopTags = false;

        function shiftTags($tags) {
            var minX = getExtreme($tags, Math.min, "left");
            var minY = getExtreme($tags, Math.min, "top");
            var moveX = (minX < 0 ? Math.abs(minX) : 0);
            var moveY = (minY < 0 ? Math.abs(minY) : 0);

            if (moveX > 0) {
                $tags.forEach(function ($tag) {
                    $tag.css("left", $tag.bounds.left + moveX);
                    $tag.bounds = new Bounds($tag);
                });
            }

            if (moveY > 0) {
                $tags.forEach(function ($tag) {
                    $tag.css("top", $tag.bounds.top + moveY);
                    $tag.bounds = new Bounds($tag);
                });
            }
        }

        function sizeContainer($container, $tags) {
            var maxX = getExtreme($tags, Math.max, "right");
            var maxY = getExtreme($tags, Math.max, "bottom");

            $container.width(maxX);
            $container.height(maxY);
        }

        function getExtreme(tags, mathFunc, property) {
            return (mathFunc.apply(Math, $.map(tags, function ($tag) { return $tag.bounds[property]; })) || 0);
        }

        var Bounds = function Bounds() {
            var Bounds = function ($element) {
                var position = $element.position();
                var width = $element.outerWidth();
                var height = $element.outerHeight();

                this.left = position.left;
                this.top = position.top;
                this.width = width;
                this.height = height;
                this.right = (position.left + width);
                this.bottom = (position.top + height);
                this.halfWidth = (this.width / 2);
                this.halfHeight = (this.height / 2);
                this.center = {
                    x: (this.left + this.halfWidth),
                    y: (this.top + this.halfHeight)
                };
            };

            Bounds.prototype.collidesWith = function (otherBounds) {
                return !this.doesNotCollideWith(otherBounds);
            };

            Bounds.prototype.doesNotCollideWith = function (otherBounds) {
                return (this.left > otherBounds.right || this.right < otherBounds.left || this.top > otherBounds.bottom || this.bottom < otherBounds.top);
            };

            return Bounds;
        }();

        window.scrollTo(0, document.body.scrollHeight);
        layoutTags($("ul.expertise"));
    </script>
}